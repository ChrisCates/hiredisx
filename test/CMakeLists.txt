CMAKE_MINIMUM_REQUIRED(VERSION 3.7)
SET(CMAKE_CXX_STANDARD 11)

SET(CMAKE_CXX_FLAGS "-g -O0 -Wall ${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fprofile-arcs -ftest-coverage")
SET(CMAKE_CXX_OUTPUT_EXTENSION_REPLACE 1)

if (UNIX)
  ADD_DEFINITIONS(-Wno-sign-compare -Wno-enum-compare)
endif (UNIX)

PROJECT(hiredisxtests)

INCLUDE("${CMAKE_CURRENT_LIST_DIR}/../hiredis.cmake")

FIND_PACKAGE(Boost COMPONENTS unit_test_framework REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
MESSAGE("-- BOOST PATH \t\t" ${Boost_INCLUDE_DIR})

SET(
  REQUIRED_LIBRARIES
  ${REQUIRED_LIBRARIES}
  Boost::unit_test_framework
)


ENABLE_TESTING()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../src)
LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../src)

ADD_EXECUTABLE(ConfigTest Config.test.cpp)
TARGET_LINK_LIBRARIES(ConfigTest ${REQUIRED_LIBRARIES})
TARGET_COMPILE_DEFINITIONS(ConfigTest PRIVATE BOOST_TEST_DYN_LINK)
ADD_TEST(TestConfig ConfigTest)

ADD_EXECUTABLE(CommandTest Command.test.cpp)
TARGET_LINK_LIBRARIES(CommandTest ${REQUIRED_LIBRARIES})
TARGET_COMPILE_DEFINITIONS(CommandTest PRIVATE BOOST_TEST_DYN_LINK)
ADD_TEST(TestCommand CommandTest)
